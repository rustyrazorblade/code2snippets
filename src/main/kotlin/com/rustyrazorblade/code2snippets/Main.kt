/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.rustyrazorblade.code2snippets

import picocli.CommandLine
import java.nio.file.Files
import java.nio.file.Path




class Main {

    @CommandLine.Parameters(index="0")
    var inPath: Path? = null

    @CommandLine.Parameters(index="1")
    var outPath: Path? = null

    var typeMap = mapOf("kt" to "//")

    fun execute() {
        println("Executing")
        val allowedKeys = typeMap.keys

        val files = Files.walk(inPath)
        for(fp in files) {
            val ext = fp.toFile().extension
            if(ext in allowedKeys) {
                println("Scanning ${fp.toFile().absoluteFile}")
                val commentMatcher = CommentMatcher(ext)
                val extractor = SnippetExtractor(commentMatcher, fp.toFile().bufferedReader())
            }
        }


        Files.walk(inPath).use {
            println(it)
        }
        println("Done walking")
    }

    fun testBoth() {

    }

}

fun main(args: Array<String>) {
    val mainObject = Main()
    CommandLine(mainObject).parseArgs(*args)
    mainObject.execute()

}
